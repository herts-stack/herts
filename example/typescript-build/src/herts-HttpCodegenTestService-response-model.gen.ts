// Don't edit this file because this file is generated by herts codegen.
import {CustomModel} from './herts-structure.gen'
import {User} from './herts-structure.gen'

export class IntegerFuncMethodResponse {
    constructor() {
        this.payload = new IntegerFuncPayload ();
    }
    payload: IntegerFuncPayload;
}
export class DoubleClassFuncMethodResponse {
    constructor() {
        this.payload = new DoubleClassFuncPayload ();
    }
    payload: DoubleClassFuncPayload;
}
export class ByteClassFuncMethodResponse {
    constructor() {
        this.payload = new ByteClassFuncPayload ();
    }
    payload: ByteClassFuncPayload;
}
export class ShortClassFuncMethodResponse {
    constructor() {
        this.payload = new ShortClassFuncPayload ();
    }
    payload: ShortClassFuncPayload;
}
export class LongClassFuncMethodResponse {
    constructor() {
        this.payload = new LongClassFuncPayload ();
    }
    payload: LongClassFuncPayload;
}
export class FloatClassFuncMethodResponse {
    constructor() {
        this.payload = new FloatClassFuncPayload ();
    }
    payload: FloatClassFuncPayload;
}
export class BooleanClassFuncMethodResponse {
    constructor() {
        this.payload = new BooleanClassFuncPayload ();
    }
    payload: BooleanClassFuncPayload;
}
export class BooleanFuncMethodResponse {
    constructor() {
        this.payload = new BooleanFuncPayload ();
    }
    payload: BooleanFuncPayload;
}
export class CharacterFuncMethodResponse {
    constructor() {
        this.payload = new CharacterFuncPayload ();
    }
    payload: CharacterFuncPayload;
}
export class BigDecimalFuncMethodResponse {
    constructor() {
        this.payload = new BigDecimalFuncPayload ();
    }
    payload: BigDecimalFuncPayload;
}
export class ListStrFuncMethodResponse {
    constructor() {
        this.payload = new ListStrFuncPayload ();
    }
    payload: ListStrFuncPayload;
}
export class CustomModelFuncMethodResponse {
    constructor() {
        this.payload = new CustomModelFuncPayload ();
    }
    payload: CustomModelFuncPayload;
}
export class ArrayListFuncMethodResponse {
    constructor() {
        this.payload = new ArrayListFuncPayload ();
    }
    payload: ArrayListFuncPayload;
}
export class CustomModelListFuncMethodResponse {
    constructor() {
        this.payload = new CustomModelListFuncPayload ();
    }
    payload: CustomModelListFuncPayload;
}
export class HashMapFuncMethodResponse {
    constructor() {
        this.payload = new HashMapFuncPayload ();
    }
    payload: HashMapFuncPayload;
}
export class CustomModelMapFuncMethodResponse {
    constructor() {
        this.payload = new CustomModelMapFuncPayload ();
    }
    payload: CustomModelMapFuncPayload;
}
export class StringFuncMethodResponse {
    constructor() {
        this.payload = new StringFuncPayload ();
    }
    payload: StringFuncPayload;
}
export class IntFuncMethodResponse {
    constructor() {
        this.payload = new IntFuncPayload ();
    }
    payload: IntFuncPayload;
}
export class DoubleFuncMethodResponse {
    constructor() {
        this.payload = new DoubleFuncPayload ();
    }
    payload: DoubleFuncPayload;
}
export class ByteFuncMethodResponse {
    constructor() {
        this.payload = new ByteFuncPayload ();
    }
    payload: ByteFuncPayload;
}
export class ShortFuncMethodResponse {
    constructor() {
        this.payload = new ShortFuncPayload ();
    }
    payload: ShortFuncPayload;
}
export class LingFuncMethodResponse {
    constructor() {
        this.payload = new LingFuncPayload ();
    }
    payload: LingFuncPayload;
}
export class FloatFuncMethodResponse {
    constructor() {
        this.payload = new FloatFuncPayload ();
    }
    payload: FloatFuncPayload;
}
export class CharFuncMethodResponse {
    constructor() {
        this.payload = new CharFuncPayload ();
    }
    payload: CharFuncPayload;
}
export class BigIntFuncMethodResponse {
    constructor() {
        this.payload = new BigIntFuncPayload ();
    }
    payload: BigIntFuncPayload;
}
export class DateFuncMethodResponse {
    constructor() {
        this.payload = new DateFuncPayload ();
    }
    payload: DateFuncPayload;
}
export class UuidFuncMethodResponse {
    constructor() {
        this.payload = new UuidFuncPayload ();
    }
    payload: UuidFuncPayload;
}
export class MapStrFuncMethodResponse {
    constructor() {
        this.payload = new MapStrFuncPayload ();
    }
    payload: MapStrFuncPayload;
}
export class VoidFuncMethodResponse {
    constructor() {
        this.payload = new VoidFuncPayload ();
    }
    payload: VoidFuncPayload;
}
export class ArrayFuncMethodResponse {
    constructor() {
        this.payload = new ArrayFuncPayload ();
    }
    payload: ArrayFuncPayload;
}
export class ListFuncMethodResponse {
    constructor() {
        this.payload = new ListFuncPayload ();
    }
    payload: ListFuncPayload;
}
export class MapFuncMethodResponse {
    constructor() {
        this.payload = new MapFuncPayload ();
    }
    payload: MapFuncPayload;
}
export class CreateUserMethodResponse {
    constructor() {
        this.payload = new CreateUserPayload ();
    }
    payload: CreateUserPayload;
}
export class GetUsersMethodResponse {
    constructor() {
        this.payload = new GetUsersPayload ();
    }
    payload: GetUsersPayload;
}

export class IntegerFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class DoubleClassFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class ByteClassFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class ShortClassFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class LongClassFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class FloatClassFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class BooleanClassFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: boolean;
}
export class BooleanFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: boolean;
}
export class CharacterFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: string;
}
export class BigDecimalFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class ListStrFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Array<string>;
}
export class CustomModelFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: CustomModel;
}
export class ArrayListFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: any;
}
export class CustomModelListFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Array<CustomModel>;
}
export class HashMapFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Map<string, string>;
}
export class CustomModelMapFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Map<CustomModel, CustomModel>;
}
export class StringFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: string;
}
export class IntFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class DoubleFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class ByteFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class ShortFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class LingFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class FloatFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class CharFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: string;
}
export class BigIntFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: number;
}
export class DateFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Date;
}
export class UuidFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: string;
}
export class MapStrFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Map<string, string>;
}
export class VoidFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: any;
}
export class ArrayFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Array<string>;
}
export class ListFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Array<string>;
}
export class MapFuncPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Map<string, string>;
}
export class CreateUserPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: User;
}
export class GetUsersPayload {
    constructor() {
        this.keyName = '';
        this.value = null;
    }
    private keyName: string;
    value: Array<User>;
}
